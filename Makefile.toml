env_files = [
    ".env"
]

[config]
default_to_workspace = false
skip_core_tasks = true

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[tasks.cluster-start]
private=true
description = "Start the kind cluster"
category = "Local Cluster (kind)"
condition_script = ['''
kind create cluster --name $CLUSTER_NAME --config kind_cluster.yaml --wait 1m
''']
script = '''
sleep 10s
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml --wait
kubectl wait --namespace ingress-nginx \
  --for=condition=ready pod \
  --selector=app.kubernetes.io/component=controller \
  --timeout=180s
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml
echo "cluster ready!"
'''

[tasks.add-helm-repos]
private=false
description = "Add the required helm repositories to the local helm"
category = "Local Cluster (kind)"
script = '''
helm repo add nextcloud https://nextcloud.github.io/helm/ | true
helm repo add bitnami https://charts.bitnami.com/bitnami | true
'''

[tasks.deploy-persistence-pv]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl apply -f pv-localhost.yaml',
]
script = '''
echo "deployed pv!"
'''

[tasks.deploy-persistence-pvc]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl apply -f pvc-localhost.yaml',
]
script = '''
echo "deployed pvc!"
'''

[tasks.deploy-persistence]
description = "Deploy the localhost persistence"
category = "Local Cluster (kind)"
dependencies = ["deploy-persistence-pv", "deploy-persistence-pvc"]

[tasks.undeploy-persistence-pv]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl delete -f pv-localhost.yaml',
]
script = '''
echo "undeployed pv!"
'''

[tasks.undeploy-persistence-pvc]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl delete -f pvc-localhost.yaml',
]
script = '''
echo "undeployed pvc!"
'''

[tasks.undeploy-persistence]
description = "Undeploy the localhost persistence"
category = "Local Cluster (kind)"
dependencies = ["undeploy-persistence-pv", "undeploy-persistence-pvc"]

[tasks.kind-start]
description = "Start the kind cluster"
category = "Local Cluster (kind)"
dependencies = ["cluster-start"]

[tasks.start]
description = "Start the whole thingy"
category = "System"
dependencies = ["kind-start"]

[tasks.status]
description = "Watch the system status"
category = "System"
command = "watch"
args = ["kubectl", "get", "all"]

[tasks.kill]
description = "Clear resources and delete the kind cluster"
category = "System"
script_runner = "@shell"
script = '''
kind delete cluster --name $CLUSTER_NAME
'''

[tasks.deploy-cert]
private = false
description = "Deploy self-signed cert"
category = "Local Cluster (kind)"
script = '''
kubectl apply -f self-signed-cert.yaml
'''

[tasks.deploy]
private = false
description = "Deploy wordpress"
category = "Local Cluster (kind)"
cwd = "./vp/"
condition_script = [
    'helm dependency update',
    'helm dependency build',
    'helm upgrade --install vp .'
]
script = '''
echo "stuff deployed!"
'''
dependencies = ["deploy-cert"]

[tasks.undeploy]
private = false
description = "Deploy stuff"
category = "Local Cluster (kind)"
cwd = "./vp/"
condition_script = [
    'helm delete vp'
]
script = '''
echo "stuff undeployed!"
'''

[tasks.set-secrets]
description = "Set secrets for various services"
category = "Local Cluster (kind)"
script_runner = "bash"
script = [
    '''
    # Create Nextcloud secrets
    kubectl get secret nextcloud-secrets \
    || kubectl create secret generic nextcloud-secrets \
        --from-literal=nextcloud-password=$DEV_NEXTCLOUD_PASSWORD \
        --from-literal=nextcloud-token=$DEV_NEXTCLOUD_TOKEN \
        --from-literal=nextcloud-username=$DEV_NEXTCLOUD_USERNAME

    kubectl get secret nextcloud-mariadb-secrets \
    || kubectl create secret generic nextcloud-mariadb-secrets \
        --from-literal=nextcloud-mariadb-password=$DEV_NEXTCLOUD_MARIADB-PASSWORD \
        --from-literal=nextcloud-mariadb-root-password=$DEV_NEXTCLOUD_MARIADB-ROOT-PASSWORD

    # Create Wordpress secrets
    kubectl get secret wordpress-secrets \
    || kubectl create secret generic wordpress-secrets \
        --from-literal=wordpress-password=$DEV_WORDPRESS_PASSWORD \
    '''
]
