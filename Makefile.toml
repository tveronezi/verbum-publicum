env_files = [
    ".env"
]

[config]
default_to_workspace = false
skip_core_tasks = true

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[tasks.cluster-start]
private=true
description = "Start the kind cluster"
category = "Local Cluster (kind)"
condition_script = ['''
kind create cluster --name $CLUSTER_NAME --config kind_cluster.yaml --wait 1m
''']
script = '''
sleep 10s
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml --wait
kubectl wait --namespace ingress-nginx \
  --for=condition=ready pod \
  --selector=app.kubernetes.io/component=controller \
  --timeout=180s
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml
echo "cluster ready!"
'''

[tasks.deploy-persistence-pv]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl apply -f pv-localhost.yaml',
]
script = '''
echo "deployed pv!"
'''

[tasks.deploy-persistence-pvc]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl apply -f pvc-localhost.yaml',
]
script = '''
echo "deployed pvc!"
'''

[tasks.deploy-persistence]
description = "Deploy the localhost persistence"
category = "Local Cluster (kind)"
dependencies = ["deploy-persistence-pv", "deploy-persistence-pvc"]

[tasks.undeploy-persistence-pv]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl delete -f pv-localhost.yaml',
]
script = '''
echo "undeployed pv!"
'''

[tasks.undeploy-persistence-pvc]
private = true
category = "Local Cluster (kind)"
condition_script = [
  'kubectl delete -f pvc-localhost.yaml',
]
script = '''
echo "undeployed pvc!"
'''

[tasks.undeploy-persistence]
description = "Undeploy the localhost persistence"
category = "Local Cluster (kind)"
dependencies = ["undeploy-persistence-pv", "undeploy-persistence-pvc"]

[tasks.kind-start]
description = "Start the kind cluster"
category = "Local Cluster (kind)"
dependencies = ["cluster-start"]

[tasks.start]
description = "Start the whole thingy"
category = "System"
dependencies = ["kind-start"]

[tasks.status]
description = "Watch the system status"
category = "System"
command = "watch"
args = ["kubectl", "get", "all"]

[tasks.kill]
description = "Clear resources and delete the kind cluster"
category = "System"
script_runner = "@shell"
script = '''
kind delete cluster --name $CLUSTER_NAME
'''

[tasks.deploy-wp]
private = false
description = "Deploy wordpress"
category = "Local Cluster (kind)"
cwd = "./vp/"
condition_script = [
    'helm dependency build',
    'helm install vp .'
]
script = '''
echo "wordpress deployed!"
'''
dependencies = ["deploy-persistence"]

[tasks.undeploy-wp]
private = false
description = "Deploy wordpress"
category = "Local Cluster (kind)"
cwd = "./vp/"
condition_script = [
    'helm delete vp',
    'kubectl delete pvc data-vp-mariadb-0'
]
script = '''
echo "wordpress undeployed!"
'''
dependencies = ["undeploy-persistence"]

[tasks.passwords]
description = "Get passwords"
category = "Local Cluster (kind)"
script = '''
wp_password=$(kubectl get secret vp-wordpress -o jsonpath="{.data.wordpress-password}" | base64 -d)

echo "http://vp.localhost -> user: user; password: ${wp_password:-<generating...>}"
'''
